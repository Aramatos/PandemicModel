{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==",
        "__module__": "stable_baselines3.common.policies",
        "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param sde_net_arch: Network architecture for extracting features\n        when using gSDE. If None, the latent features from the policy will be used.\n        Pass an empty list to use the states as features.\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function ActorCriticPolicy.__init__ at 0x7f895503ea60>",
        "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x7f895503eaf0>",
        "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x7f895503eb80>",
        "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x7f895503ec10>",
        "_build": "<function ActorCriticPolicy._build at 0x7f895503eca0>",
        "forward": "<function ActorCriticPolicy.forward at 0x7f895503ed30>",
        "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x7f895503edc0>",
        "_predict": "<function ActorCriticPolicy._predict at 0x7f895503ee50>",
        "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x7f895503eee0>",
        "get_distribution": "<function ActorCriticPolicy.get_distribution at 0x7f895503ef70>",
        "predict_values": "<function ActorCriticPolicy.predict_values at 0x7f8955042040>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7f895503df80>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "",
        "dtype": "float32",
        "shape": [
            100,
            7
        ],
        "low": "[[-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]\n [-inf -inf -inf -inf -inf -inf -inf]]",
        "high": "[[inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]\n [inf inf inf inf inf inf inf]]",
        "bounded_below": "[[False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]]",
        "bounded_above": "[[False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]\n [False False False False False False False]]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.multi_discrete.MultiDiscrete'>",
        ":serialized:": "gAWVbgEAAAAAAACMGWd5bS5zcGFjZXMubXVsdGlfZGlzY3JldGWUjA1NdWx0aURpc2NyZXRllJOUKYGUfZQojARudmVjlIwSbnVtcHkuY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolqAAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAAoAAAAAAAAACgAAAAAAAAAKAAAAAAAAAJSMBW51bXB5lIwFZHR5cGWUk5SMAmk4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLFIWUjAFDlHSUUpSMBXNoYXBllEsUhZRoC2gPjApfbnBfcmFuZG9tlE51Yi4=",
        "nvec": "[10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10]",
        "shape": [
            20
        ],
        "dtype": "int64",
        "_np_random": null
    },
    "n_envs": 1,
    "num_timesteps": 26624,
    "_total_timesteps": 25000,
    "seed": null,
    "action_noise": null,
    "start_time": 1638546630.5213995,
    "learning_rate": 0.0003,
    "tensorboard_log": "./ppo_name_tensorboard/",
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV9wIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwNX2J1aWx0aW5fdHlwZZSTlIwKTGFtYmRhVHlwZZSFlFKUKGgCjAhDb2RlVHlwZZSFlFKUKEsBSwBLAEsBSwFLE0MEiABTAJROhZQpjAFflIWUjGMvaG9tZS9jbGFpcmUvbWluaWNvbmRhMy9lbnZzL3BhbmRlbWljL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuAQwIAAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjGMvaG9tZS9jbGFpcmUvbWluaWNvbmRhMy9lbnZzL3BhbmRlbWljL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpSMHGNsb3VkcGlja2xlLmNsb3VkcGlja2xlX2Zhc3SUjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIH2UfZQoaBdoDowMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBiMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHPzOpKjBVMmGFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVZwsAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJbwCgAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUjAVudW1weZSMBWR0eXBllJOUjAJmNJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiSwFLZEsHh5SMAUOUdJRSlC4="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": -0.0649599999999999,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 130,
    "n_steps": 2048,
    "gamma": 0.99,
    "gae_lambda": 0.95,
    "ent_coef": 0.0,
    "vf_coef": 0.5,
    "max_grad_norm": 0.5,
    "batch_size": 64,
    "n_epochs": 10,
    "clip_range": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV9wIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwNX2J1aWx0aW5fdHlwZZSTlIwKTGFtYmRhVHlwZZSFlFKUKGgCjAhDb2RlVHlwZZSFlFKUKEsBSwBLAEsBSwFLE0MEiABTAJROhZQpjAFflIWUjGMvaG9tZS9jbGFpcmUvbWluaWNvbmRhMy9lbnZzL3BhbmRlbWljL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuAQwIAAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjGMvaG9tZS9jbGFpcmUvbWluaWNvbmRhMy9lbnZzL3BhbmRlbWljL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpSMHGNsb3VkcGlja2xlLmNsb3VkcGlja2xlX2Zhc3SUjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIH2UfZQoaBdoDowMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBiMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP8mZmZmZmZqFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "clip_range_vf": null,
    "target_kl": null
}