Questions to be addressed:

From Nicola:
- In Trial.ipynb:
1. we start with only one infected?
for now ys
2. If all connections are random, we can have nodes not connected to anyone, which is not really realistic right?
yes, can you figure it out? 
3. I'd be glad if someone could explain to me how agegrouplist is defined ([[] for i in range(1, agegroups+1)])
it creates a sub lsit [] for i in the range from 1 to N, N not included, all within another list.
this is to be able to obtain a number of lists that we can use
4. Why do we visit the nodes in random order?
it seems sensible
5. Why if random() < r ? I mean, it doesn't matter much all in all, but maybe it is easier to subtract than to add (still no big deal at all I'm just weirded out)
im also not sure
6. The infection from the S state doesn't make sense to me - why would we have spontaneous infection with no contact?
i removed that
7. Also going to check one neighbor only randomly doesnt make that much sense - can we use the model Thomas sent us? It was for differentiable physics, but i still see it more easily adapted than others
What??? how, wich one?
8.
-----------------------------------------------------------------------------------------------------------------
        elif random() < s:

            state[v] = S
-----------------------------------------------------------------------------------------------------------------
I guess these lines of code have the wrong indentation - they were set on the "state selection" level
9. Missing termination condition - will it continue forever to run?
it says it will until te window closes
10. Not really clear to me
-----------------------------------------------------------------------------------------------------------------
cid = GLib.idle_add(update_state)


# We will give the user the ability to stop the program by closing the window.

win.connect("delete_event", Gtk.main_quit)


# Actually show the window, and start the main loop.

win.show_all()

Gtk.main()
-----------------------------------------------------------------------------------------------------------------
What do these mean?
they are subrutines of the GTK window, if you have time to take a look at them that would be ncie

__________________________________________________________________________________________________________________________________________________________________________________________________________________________________

From Unknown (I guess Hector?):
- In Trial.ipynb:
1.
-----------------------------------------------------------------------------------------------------------------
# If True, the frames will be dumped to disk as images.
# CAN SOMONE FIGURE OUT WHAT THIS DOES???????????????????????????????

offscreen = sys.argv[1] == "offscreen" if len(sys.argv) > 1 else False
-----------------------------------------------------------------------------------------------------------------
sys.argv is "the list of command line arguments passed to a Python script", with [0] being the script name.
Look at: "https://stackoverflow.com/questions/4117530/sys-argv1-meaning-in-script"
Basically, we are saying: offscreen will be the result of the comparison {sys.argv[1] == "offscreen"} if the condition {len(sys.argv) > 1} is satisfied, otherwise it will be false.

thanks, but the, what defines sys.argv?

2.
-----------------------------------------------------------------------------------------------------------------
if offscreen and not os.path.exists("./frames"):

    os.mkdir("./frames")
-----------------------------------------------------------------------------------------------------------------
os.path.exists("./frames") checks if there is an existing path called ./frames -- which should mean "if there is a directory called frames in the current working directory" --. If there is not one and offscreen is set to True (so if the frames should be saved offscreen), create a directory called frames.
